{--
  https://wiki.haskell.org/Euler_problems/31_to_40#Problem_31

  n = zipWith (+) (ways [2,5,10,20,50,100,200]) ([0]*1 ++ n)
  n = zipWith (+) (ways [5,10,20,50,100,200])   ([0]*2 ++ n)
  n = zipWith (+) (ways [10,20,50,100,200])     ([0]*5 ++ n)
  n = zipWith (+) (ways [20,50,100,200])        ([0]*10 ++ n)
  n = zipWith (+) (ways [50,100,200])           ([0]*20 ++ n)
  n = zipWith (+) (ways [100,200])              ([0]*50 ++ n)
  n = zipWith (+) (ways [200])                  ([0]*100 ++ n)
  n = zipWith (+) (ways [])                     ([0]*200 ++ n)
                  [1,0,0..]

                 0          50          100         150          200         250         300         350          400
         ways [] 10.......................................................................................................
  ([0]*200 ++ n) 00...............................................
                                                           ways[] 10...............................................
                                                   ([0]*200 ++ n) 00...............................................
                                                                                                           ways [] 10.....
                                                                                                    ([0]*200 ++ n) 00.....

      ways [200] 10...............................................10...............................................10.....
  ([0]*100 ++ n) 00......................
                              ways [200] 10...............................................10..............................
                          ([0]*100 ++ n) 00.......................
                                                        ways[200] 10...............................................10.....
                                                   ([0]*100 ++ n) 00......................
                                                                                ways[200] 10..............................
                                                                           ([0]*100 ++ n) 00.......................
                                                                                                         ways[200] 10.....
                                                                                                    ([0]*100 ++ n) 00.....
      
  ways [100,200] 10......................10.......................20......................20.......................30.....
   ([0]*50 ++ n) 00..........
              ways [100,200] 10......................10.......................20......................20..................
               ([0]*50 ++ n) 00..........
                          ways [100,200] 10.......................10......................20.......................20.....
                           ([0]*50 ++ n) 00..........
                                      ways [100,200] 10.......................10......................20..................
                                       ([0]*50 ++ n) 00...........
                                                   ways [100,200] 10......................10......................20.....
                                                    ([0]*50 ++ n) 00..........
--}

module WikiEuler31 (wikiE31Solve) where

wikiE31Solve = ways [1,2,5,10,20,50,100,200] !! 200
  where
    ways [] = 1 : repeat 0
    ways (coin:coins) = n 
      where
        n = zipWith (+) (ways coins) (replicate coin 0 ++ n)
